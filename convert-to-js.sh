#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ TypeScript –≤ JavaScript

echo "üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è TypeScript ‚Üí JavaScript..."

# 1. –ö–æ–ø–∏—Ä—É–µ–º TypeScript —Ñ–∞–π–ª—ã –≤ JavaScript
echo "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..."
cp src/main/socket-manager.ts src/main/socket-manager.js
cp src/main/printer-manager.ts src/main/printer-manager.js
cp src/main/main.ts src/main/main.js
cp src/preload/preload.ts src/preload/preload.js
cp src/renderer/index.ts src/renderer/index.js

# 2. –£–¥–∞–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã —Ç–∏–ø–æ–≤ –∏ –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ require
echo "üîß –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∏–º–ø–æ—Ä—Ç–æ–≤..."

for file in src/main/*.js src/preload/*.js; do
  if [ -f "$file" ]; then
    # –ó–∞–º–µ–Ω—è–µ–º import –Ω–∞ require –¥–ª—è electron
    sed -i '' 's/import { \(.*\) } from '\''electron'\'';/const { \1 } = require('\''electron'\'');/g' "$file"

    # –ó–∞–º–µ–Ω—è–µ–º import * as –Ω–∞ require
    sed -i '' 's/import \* as \(.*\) from '\''\(.*\)'\'';/const \1 = require('\''\2'\'');/g' "$file"

    # –ó–∞–º–µ–Ω—è–µ–º –æ–±—ã—á–Ω—ã–µ import –Ω–∞ require
    sed -i '' 's/import \(.*\) from '\''\(.*\)'\'';/const \1 = require('\''\2'\'');/g' "$file"

    # –£–¥–∞–ª—è–µ–º –∏–º–ø–æ—Ä—Ç—ã —Ç–∏–ø–æ–≤
    sed -i '' '/^import.*{.*}.*from.*types/d' "$file"
    sed -i '' '/^import type/d' "$file"

    # –ó–∞–º–µ–Ω—è–µ–º export class –Ω–∞ module.exports
    sed -i '' 's/export class \(.*\) {/class \1 {/g' "$file"

    # –î–æ–±–∞–≤–ª—è–µ–º module.exports –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞ –¥–ª—è –∫–ª–∞—Å—Å–æ–≤
    if grep -q "^class.*{" "$file"; then
      class_name=$(grep "^class" "$file" | head -1 | sed 's/class \([^ ]*\).*/\1/')
      if [ ! -z "$class_name" ]; then
        echo "" >> "$file"
        echo "module.exports = { $class_name };" >> "$file"
      fi
    fi
  fi
done

# 3. –£–¥–∞–ª—è–µ–º –∞–Ω–Ω–æ—Ç–∞—Ü–∏–∏ —Ç–∏–ø–æ–≤ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
echo "üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Ç–∏–ø–æ–≤..."
for file in src/main/*.js src/preload/*.js; do
  if [ -f "$file" ]; then
    # –£–¥–∞–ª—è–µ–º —Ç–∏–ø—ã –∏–∑ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ñ—É–Ω–∫—Ü–∏–π: (param: Type) -> (param)
    sed -i '' 's/(\([a-zA-Z_][a-zA-Z0-9_]*\): [^,)]*)/(\1)/g' "$file"

    # –£–¥–∞–ª—è–µ–º —Ç–∏–ø—ã –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π: ): Type -> )
    sed -i '' 's/): [^{]*{/)  {/g' "$file"

    # –£–¥–∞–ª—è–µ–º —Ç–∏–ø—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: let x: Type = -> let x =
    sed -i '' 's/\(let\|const\|var\) \([a-zA-Z_][a-zA-Z0-9_]*\): [^=]* =/\1 \2 =/g' "$file"

    # –£–¥–∞–ª—è–µ–º public/private/protected
    sed -i '' 's/  \(public\|private\|protected\) //g' "$file"

    # –£–¥–∞–ª—è–µ–º interface
    sed -i '' '/^export interface/,/^}/d' "$file"
    sed -i '' '/^interface/,/^}/d' "$file"
  fi
done

echo "‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
ls -lh src/main/*.js src/preload/*.js src/renderer/*.js 2>/dev/null | awk '{print $9, $5}'

echo ""
echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª—ã –≤—Ä—É—á–Ω—É—é, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω–æ–π!"
