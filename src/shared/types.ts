// üè∑Ô∏è –î–∞–Ω–Ω—ã–µ —ç—Ç–∏–∫–µ—Ç–∫–∏ (–æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é)
export interface LabelData {
  // –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è —ç—Ç–∏–∫–µ—Ç–∫–∏
  id: string;
  labelId: string;
  category: string; // –ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ (–±—ã–ª–æ name)
  temperature: string;
  shelfLifeDays: number;
  productionDate: string; // ISO —Å—Ç—Ä–æ–∫–∞
  expiryDate: string; // ISO —Å—Ç—Ä–æ–∫–∞ (–±—ã–ª–æ expiry)
  preparerName: string; // –ò–º—è –ø–æ–≤–∞—Ä–∞ (–±—ã–ª–æ chef)
  copies: number;
  method?: string;
  comment?: string;
  purpose?: string;
  
  // HTML –∏ –ø–æ–ª—è –¥–ª—è –ø–µ—á–∞—Ç–∏
  html?: string; // HTML –¥–ª—è –ø–µ—á–∞—Ç–∏
  fields?: any; // –ü–æ–ª—è –¥–ª—è –ø–µ—á–∞—Ç–∏
  
  // –û–±—Ä–∞—Ç–Ω–∞—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å (deprecated)
  name?: string; // = category
  chef?: string; // = preparerName
  expiry?: string; // = expiryDate
  description?: string; // = comment
}

// üñ®Ô∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–Ω—Ç–µ—Ä–µ
export interface PrinterInfo {
  name: string;
  displayName: string;
  description: string;
  status: 'ready' | 'busy' | 'error' | 'offline';
  isDefault: boolean;
  type: 'thermal' | 'inkjet' | 'laser' | 'unknown';
}

// üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–µ—á–∞—Ç–∏
export interface PrintResult {
  success: boolean;
  error?: string;
  message?: string;
}

// üéØ –ó–∞–¥–∞–Ω–∏–µ –Ω–∞ –ø–µ—á–∞—Ç—å
export interface PrintJob {
  jobId: string;
  labelData: LabelData;
  timestamp: Date;
}

// üì° –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
export type ConnectionStatus = 'connected' | 'server-connected' | 'disconnected' | 'error';

// ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export interface AppSettings {
  // –°–µ—Ä–≤–µ—Ä –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ
  serverUrl: string;
  restaurantCode: string;
  
  // –ü—Ä–∏–Ω—Ç–µ—Ä
  selectedPrinter: string;
  
  // üñ®Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–µ—á–∞—Ç–∏ (—Å–º–µ—â–µ–Ω–∏–µ)
  labelOffsetHorizontal: number; // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ –≤ –º–º (+ –≤–ø—Ä–∞–≤–æ, - –≤–ª–µ–≤–æ)
  labelOffsetVertical: number;   // –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–æ–µ —Å–º–µ—â–µ–Ω–∏–µ –≤ –º–º (+ –≤–≤–µ—Ä—Ö, - –≤–Ω–∏–∑)
  
  // –ü–æ–≤–µ–¥–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  autoLaunch: boolean;
  minimizeToTray: boolean;
  notifications: boolean;
  isFirstRun: boolean; // üÜï –§–ª–∞–≥ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ popup –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞
  
  // –û–∫–Ω–æ
  windowBounds: {
    width: number;
    height: number;
    x?: number;
    y?: number;
  };
}

// üèóÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export interface AppConfig {
  version: string;
  serverUrl: string;
  updateServer?: string;
}

// üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
export interface ConnectionStats {
  connected: boolean;
  serverUrl: string;
  restaurantCode: string;
  connectedAt?: Date;
  lastHeartbeat?: Date;
  reconnectAttempts: number;
}

// üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–µ—á–∞—Ç–∏
export interface PrintStats {
  totalJobs: number;
  successfulJobs: number;
  failedJobs: number;
  lastPrintJob?: Date;
}

// üîî –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
export interface AppNotification {
  id: string;
  title: string;
  message: string;
  type: 'info' | 'success' | 'warning' | 'error';
  timestamp: Date;
  read: boolean;
}

// üóÇÔ∏è –í–∫–ª–∞–¥–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫
export type SettingsTab = 'connection' | 'printer' | 'general' | 'updates' | 'logs';

// üé® –¢–µ–º–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export type AppTheme = 'light' | 'dark' | 'system';

// üì± –°–æ—Å—Ç–æ—è–Ω–∏–µ UI
export interface UIState {
  activeTab: SettingsTab;
  theme: AppTheme;
  loading: boolean;
  notifications: AppNotification[];
}

// üîß –î–µ–π—Å—Ç–≤–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export type AppAction = 
  | { type: 'SET_CONNECTION_STATUS'; payload: ConnectionStatus }
  | { type: 'SET_SETTINGS'; payload: Partial<AppSettings> }
  | { type: 'SET_PRINTERS'; payload: PrinterInfo[] }
  | { type: 'ADD_NOTIFICATION'; payload: AppNotification }
  | { type: 'REMOVE_NOTIFICATION'; payload: string }
  | { type: 'SET_ACTIVE_TAB'; payload: SettingsTab }
  | { type: 'SET_THEME'; payload: AppTheme }
  | { type: 'SET_LOADING'; payload: boolean };

// üåê WebSocket —Å–æ–±—ã—Ç–∏—è
export interface WebSocketEvents {
  // –ö–ª–∏–µ–Ω—Ç -> –°–µ—Ä–≤–µ—Ä
  register_agent: {
    pairingCode: string;
    printerInfo: {
      name: string;
      type: string;
      status: string;
    };
  };
  
  agent_heartbeat: {
    status: string;
    timestamp: number;
    printerStatus: string;
  };
  
  print_result: {
    jobId: string;
    status: 'success' | 'error';
    message: string;
    timestamp: number;
  };
  
  // –°–µ—Ä–≤–µ—Ä -> –ö–ª–∏–µ–Ω—Ç
  agent_registered: void;
  registration_error: string;
  print_command: {
    jobId: string;
    labelData: LabelData;
  };
  server_stats: {
    connections: number;
    agents: number;
    browsers: number;
  };
}
